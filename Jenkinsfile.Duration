pipeline {

    agent any

    stages {
        stage('Load testing') {
            steps {
                withCredentials([certificate(credentialsId: 'TSTNMT2321000156-B02', keystoreVariable: 'CERTKEY', passwordVariable: 'CERTKEYPWD'),
                                 certificate(credentialsId: 'TSTNMT_TRUSTSTORE', keystoreVariable: 'TRUSTKEY', passwordVariable: 'TRUSTKEYPWD')]) {
                    sh """
                        #! /bin/bash
                        echo "Tests will be run against the following host: ${TARGETHOST}"
                        keytool -list -keystore ${TRUSTKEY} -storepass ${TRUSTKEYPWD} -storetype pkcs12
                        cd loadtest
                        cat ${CERTKEY} > ./conf/cert.p12
                        ls -l ./conf/cert.p12
                        sed -e "s/KEYSTOREVARIABLE/\"cert.p12\"/g" -e "s/KEYSTOREPASSWORD/\"${CERTKEYPWD}\"/g" ./conf/gatling.sedit > ./conf/gatling.conf
                        cat ${TRUSTKEY} > ./conf/truststore.p12
                        ls -l ./conf/truststore.p12
                        sed -i -e "s/TRUSTSTOREVARIABLE/\"truststore.p12\"/g" -e "s/TRUSTSTOREPASSWORD/\"${TRUSTKEYPWD}\"/g" ./conf/gatling.conf
                        sed -e "s/SIMULATION/\"RequestsDuration\"/g" ./user-files/chown-files.sedit > ./user-files/chown-files.sh
                        sed -e "s/TARGETHOST/\"$TARGETHOST\"/g" ./user-files/simulations/RequestsDuration.sedit > ./user-files/simulations/RequestsDuration.scala
                        [[ ! -f /tmp/docker-compose ]] && curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-Linux-x86_64" -o /tmp/docker-compose
                        chmod +x /tmp/docker-compose
                        /tmp/docker-compose run --rm testsuite

                    """
                }
                gatlingArchive()
            }
        }
    }
    post {
        always {
            sh 'cd loadtest && /tmp/docker-compose down'
            junit 'loadtest/results/**/assertions.xml'
        }
    }
}
